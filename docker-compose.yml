services:
  traefik:
    restart: unless-stopped
    image: traefik:2.11
    networks:
      - viplab
    ports: # if your system has already apache running on 80/443 choose different ports and adjust traefik.toml
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTS_PATH}:/etc/certs # copy certs of your host to ./certs before!
  websocket-api:
    restart: unless-stopped
    image: viplab/websocket-api:latest
    networks:
      - viplab
    environment:
      - JWKS_FILE=/config/jwks.json
      - AMQP_HOST=activemq
    volumes:
      - ./jwks.json:/config/jwks.json:ro
    depends_on:
      - activemq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket-api.entrypoints=websecure"
      - "traefik.http.routers.websocket-api.tls=true"
      - "traefik.http.routers.websocket-api.rule=Host(`${HOST_URL}`) && Path(`/computations`)"
  activemq:
    restart: unless-stopped
    image: viplab/artemis:2.23.0-r0
    networks:
      - viplab
    environment:
      ARTEMIS_USERNAME: user
      ARTEMIS_PASSWORD: password
  standalone-frontend:
    restart: unless-stopped
    image: viplab/standalone-frontend:latest
    networks:
      - viplab
    volumes:
      - ./jwks.private.json:/jwks.private.json:ro
      - ./examples:/input:ro
    environment:
      - WSAPI=wss://${HOST_URL}/computations
    profiles: ["standalone"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.standalone-frontend.entrypoints=websecure"
      - "traefik.http.routers.standalone-frontend.tls=true"
      - "traefik.http.routers.standalone-frontend.rule=Host(`${HOST_URL}`)"
  standalone-frontend-mount:
    restart: unless-stopped
    image: viplab/standalone-frontend:latest
    networks:
      - viplab
    volumes:
      - ./jwks.private.json:/jwks.private.json:ro
      - ${FRONTEND_DIR}/src:/app
      - ./examples:/input:ro
    environment:
      - WSAPI=wss://${HOST_URL}/computations
    profiles: ["standalone-mount"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.standalone-frontend.entrypoints=websecure"
      - "traefik.http.routers.standalone-frontend.tls=true"
      - "traefik.http.routers.standalone-frontend.rule=Host(`${HOST_URL}`)"
  vue-frontend-mount:
    restart: unless-stopped
    image: viplab/npm:18.13.0-alpine
    networks:
      - viplab
    command: ["run", "serve", "--", "--host", "0.0.0.0"]
    volumes:
      - ./jwks.private.json:/app/src/assets/jwks.private.json:ro
      - ${VUE_DIR}:/app
    environment:
      - WSAPI=wss://${HOST_URL}/computations
    profiles: ["vue-mount"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vue-frontend.entrypoints=websecure"
      - "traefik.http.routers.vue-frontend.tls=true"
      - "traefik.http.routers.vue-frontend.rule=Host(`${HOST_URL}`)"
  standalone-frontend-sign:
    restart: unless-stopped
    image: viplab/standalone-frontend:latest
    networks:
      - viplab
    volumes:
      - ./jwks.private.json:/jwks.private.json:ro
      - ./examples:/input:ro
    environment:
      - WSAPI=wss://${HOST_URL}/computations
    profiles: ["vue-mount"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vue-frontend-sign.entrypoints=websecure"
      - "traefik.http.routers.vue-frontend-sign.tls=true"
      - "traefik.http.routers.vue-frontend-sign.rule=Host(`${HOST_URL}`) && Path(`/sign`)"
  darus-connector:
    restart: unless-stopped
    image: viplab/dv-viplab-connector:latest
    networks:
      - viplab
    depends_on:
      - redis
    volumes:
      - ./jwks.private.json:/jwks.private.json:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WSAPI=wss://${HOST_URL}/computations
      - FLASK_SECRET
      - LOGIN_MOD_JWT_KEY
      - LOGIN_MOD_URL
      - REDIS_HOST_PORT=redis:6379
      - DATAVERSE_URL
    profiles: ["darus"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.darus-connector.entrypoints=websecure"
      - "traefik.http.routers.darus-connector.tls=true"
      - "traefik.http.routers.darus-connector.rule=Host(`${HOST_URL}`)"
  redis:
    image: redis:alpine
    networks:
      - viplab
    restart: unless-stopped
    profiles: ["darus"]
  backend:
    restart: unless-stopped
    image: viplab/backend:latest
    networks:
      - viplab
    environment:
      - AMQPServer=activemq
      - endpoint_url
      - access_key
      - secret_key
      - rewrite_endpoint_url
      - bucket_name
    depends_on:
      - activemq
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  s3:
    restart: unless-stopped
    image: scireum/s3-ninja:latest
    networks:
      - viplab
    profiles: ["s3"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3.entrypoints=websecure"
      - "traefik.http.routers.s3.tls=true"
      - "traefik.http.routers.s3.rule=Host(`${HOST_URL}`) && (PathPrefix(`/test-bucket`) || PathPrefix(`/ui`)  || PathPrefix(`/assets`))"

  dummy-backend:
    restart: unless-stopped
    image: viplab/dummy-backend:latest
    networks:
      - viplab
    environment:
      - amqp-host=activemq
      - viplab.responses=
    profiles: ["dummy"]

networks:
  viplab:
    enable_ipv6: ${ENABLE_IPV6:-false}
