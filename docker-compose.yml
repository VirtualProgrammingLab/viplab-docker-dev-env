version: "3.9"

services:
#  ilias:
#    build: ./ilias
#    ports:
#      - 8082:80
  traefik:
    restart: on-failure
    image: traefik:2.5.3
    ports: # if your system has already apache running on 80/443 choose different ports and adjust traefik.toml
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/etc/certs # copy certs of your host to ./certs before!
  websocket-api:
    image: viplab/websocket-api:latest
    environment:
      - JWKS_FILE=/config/jwks.json
      - amqp-host=activemq
    volumes:
      - ./jwks.json:/config/jwks.json:ro
    depends_on:
      - activemq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket-api.entrypoints=websecure"
      - "traefik.http.routers.websocket-api.tls=true"
      - "traefik.http.routers.websocket-api.rule=Host(`${HOST}`) && Path(`/computations`)"
  activemq:
    image: viplab/activemq-artemis:2.23.0-r0
    environment:
      ARTEMIS_USERNAME: user
      ARTEMIS_PASSWORD: password
  standalone-frontend:
    image: viplab/standalone-frontend:latest
    volumes:
      - ./jwks.private.json:/jwks.private.json:ro
      - ./examples:/input:ro
    environment:
      - WSAPI=wss://localhost/computations
    profiles: ["standalone"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.standalone-frontend.entrypoints=websecure"
      - "traefik.http.routers.standalone-frontend.tls=true"
      - "traefik.http.routers.standalone-frontend.rule=Host(`${HOST}`)"
  darus-connector:
    image: viplab/dv-viplab-connector:latest
    volumes:
      - ./jwks.private.json:/app/jwks.private.json:ro
    environment:
      - WSAPI=wss://localhost/computations
    profiles: ["darus"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.darus-connector.entrypoints=websecure"
      - "traefik.http.routers.darus-connector.tls=true"
      - "traefik.http.routers.darus-connector.rule=Host(`${HOST}`)"
  backend:
    image: viplab/backend:latest
    environment:
      - AMQPServer=activemq
    depends_on:
      - activemq
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  dummy-backend:
    image: viplab/dummy-backend:latest
    environment:
      - amqp-host=activemq
      - viplab.responses=
    profiles: ["dummy"]
